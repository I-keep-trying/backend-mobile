{"version":3,"sources":["reducers/countryDataReducer.js","reducers/weatherReducer.js","reducers/timeZoneReducer.js","services/countriesData.js","App.js","store.js","index.js","reducers/countryReducer.js"],"names":["getCountryData","country","dispatch","a","countryService","getCountry","countryData","type","data","getCountryNews","countryDataReducer","state","action","toString","includes","info","news","getWeather","location","weather","weatherReducer","getTimeZone","timeZone","timeZoneReducer","getAll","axios","get","response","params","unit","res","Countries","loadable","CountriesMobile","App","useDispatch","countries","useSelector","initialCountries","useEffect","undefined","initializeCountries","isMobile","reducer","combineReducers","countryReducer","unitReducer","time","menu","menuReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","searchCountriesByName","input","filterCountries","filterCountriesByRegion","region","filterCountriesBySubRegion","subregion","sortCountries","key","toggleUnit","show","toggleMenu","noCapitals","filter","item","name","common","antarctica","c","map","capital","bouvetIsland","heardIsland","macau","usMinor","southGeorgia","frenchSouthern","otherCountries","nCountries","b","localeCompare","sort","reset","filtered","sortConfig","direction","toSearch","toLowerCase","startsWith","selectRegion","regionFiltered","selectSubRegion","subregionFiltered","s","newState","sortableItems","sortedState"],"mappings":"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","file":"static/js/main.cdaeffc9.chunk.js","sourcesContent":["import countryService from '../services/countriesData'\n\nconst countryDataReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'COUNTRY_DATA':\n      if (action.data.toString().includes('Error')) {\n        return { data: 'no data' }\n      } else {\n        return { ...state, info: action.data }\n      }\n    case 'COUNTRY_NEWS':\n      if (action.data.toString().includes('Error')) {\n        return { data: 'no news available' }\n      } else {\n        return { ...state, news: action.data }\n      }\n    default:\n      return state\n  }\n}\n\nexport const getCountryData = (country) => {\n  return async (dispatch) => {\n    const countryData = await countryService.getCountry(country)\n    dispatch({\n      type: 'COUNTRY_DATA',\n      data: countryData,\n    })\n  }\n}\n\nexport const getCountryNews = (country) => {\n  return async (dispatch) => {\n    const countryData = await countryService.getCountryNews(country)\n    dispatch({\n      type: 'COUNTRY_NEWS',\n      data: countryData,\n    })\n  }\n}\n\nexport default countryDataReducer\n","import countryService from '../services/countriesData'\n\nconst weatherReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_WEATHER':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const getWeather = (location) => {\n  return async (dispatch) => {\n    const weather = await countryService.getWeather(location)\n\n    dispatch({\n      type: 'GET_WEATHER',\n      data: weather,\n    })\n  }\n}\n\nexport default weatherReducer\n","import countryService from '../services/countriesData'\n\nconst timeZoneReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_TIME_ZONE':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const getTimeZone = (location) => {\n  return async (dispatch) => {\n    const timeZone = await countryService.getTimeZone(location)\n    dispatch({\n      type: 'GET_TIME_ZONE',\n      data: timeZone,\n    })\n  }\n}\n\nexport default timeZoneReducer\n\n/* \nlocation ? (2) [-53.1, 72.51666666]\ntimeZoneReducer.js:13 location for time zone \n{location: Array(2)}\nlocation: (2) [-53.1, 72.51666666]\n0: -53.1\n1: 72.51666666\nlength: 2\nlastIndex: (...)lastItem: (...)[[Prototype]]: Array(0)[[Prototype]]: Object\n*/","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/countries'\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst getWeather = async (params) => {\r\n  const res = await axios.get(\r\n    `/api/weather/lat/${params.location[0]}/lng/${params.location[1]}/unit/${params.unit}`\r\n  )\r\n  return res.data\r\n}\r\n\r\nconst getTimeZone = async (params) => {\r\n  const res = await axios.get(\r\n    `/api/time/lat/${params.location[0]}/lng/${params.location[1]}`\r\n  )\r\n  return res.data\r\n}\r\n\r\nconst getCountryNews = async (params) => {\r\n\r\n  const res = await axios.get(`/api/countries/news/${params}`)\r\n  return res.data\r\n}\r\n\r\nconst getCountry = async (params) => {\r\n  const res = await axios.get(`/api/countries/name/${params}`)\r\n  return res.data\r\n}\r\n\r\nexport default { getAll, getWeather, getTimeZone, getCountry, getCountryNews }\r\n","import React, { useEffect } from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport loadable from '@loadable/component'\r\nimport { initializeCountries } from './reducers/countryReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst Countries = loadable(() => import('./pages/Countries'))\r\nconst CountriesMobile = loadable(() => import('./pages/CountriesMobile'))\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  const countries = useSelector((state) => {\r\n    return state.countries.initialCountries\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (countries === undefined) {\r\n      dispatch(initializeCountries())\r\n    }\r\n  }, [dispatch, countries])\r\n\r\n  return countries !== undefined ? (\r\n    isMobile ? (\r\n      <CountriesMobile />\r\n    ) : (\r\n      <Countries />\r\n    )\r\n  ) : (\r\n    <></>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport countryReducer, {\n  unitReducer,\n  menuReducer,\n} from './reducers/countryReducer'\nimport countryDataReducer from './reducers/countryDataReducer'\nimport weatherReducer from './reducers/weatherReducer'\nimport timeZoneReducer from './reducers/timeZoneReducer'\n\nconst reducer = combineReducers({\n  countries: countryReducer,\n  country: countryDataReducer,\n  unit: unitReducer,\n  weather: weatherReducer,\n  time: timeZoneReducer,\n  menu: menuReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport './assets/css/semantic.css'\r\nimport 'react-app-polyfill/ie11'\r\nimport 'core-js'\r\nimport App from './App'\r\nimport store from './store'\r\n\r\n/* const styleLink = document.createElement('link')\r\nstyleLink.rel = 'stylesheet'\r\nstyleLink.href =\r\n  'https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css'\r\ndocument.head.appendChild(styleLink) */\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n//  \"proxy\": \"https://sheltered-scrubland-08732.herokuapp.com\",\r\n// local proxy: \"proxy\": \"http://localhost:3001/\"\r\n// backend: https://github.com/I-keep-trying/my-app-backend\r\n","import countryService from '../services/countriesData'\r\n\r\n/* ---------- Countries Reducer ------------- */\r\nconst countryReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'INIT_COUNTRIES':\r\n      // Find countries from restcountries.com api with missing keys\r\n      const noCapitals = action.data.filter(\r\n        (item) =>\r\n          item.name.common === 'Antarctica' ||\r\n          item.name.common === 'Bouvet Island' ||\r\n          item.name.common === 'Heard Island and McDonald Islands' ||\r\n          item.name.common === 'Macau' ||\r\n          item.name.common === 'United States Minor Outlying Islands' ||\r\n          item.name.common === 'South Georgia' ||\r\n          item.name.common === 'French Southern and Antarctic Lands'\r\n      )\r\n      // Create replacements inserting missing keys\r\n      const antarctica = noCapitals\r\n        .filter((c) => c.name.common === 'Antarctica')\r\n        .map((c) => {\r\n          return { ...c, capital: ['No Capital City'], subregion: 'Antarctic' }\r\n        })\r\n\r\n      const bouvetIsland = noCapitals\r\n        .filter((c) => c.name.common === 'Bouvet Island')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Oslo'], subregion: 'Antarctic' }\r\n        })\r\n\r\n      const heardIsland = noCapitals\r\n        .filter((c) => c.name.common === 'Heard Island and McDonald Islands')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Bern'], subregion: 'Antarctic' }\r\n        })\r\n\r\n      const macau = noCapitals\r\n        .filter((c) => c.name.common === 'Macau')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Macau'] }\r\n        })\r\n\r\n      const usMinor = noCapitals\r\n        .filter((c) => c.name.common === 'United States Minor Outlying Islands')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Washington DC'] }\r\n        })\r\n\r\n      const southGeorgia = noCapitals\r\n        .filter((c) => c.name.common === 'South Georgia')\r\n        .map((c) => {\r\n          return { ...c, subregion: 'Antarctic' }\r\n        })\r\n\r\n      const frenchSouthern = noCapitals\r\n        .filter((c) => c.name.common === 'French Southern and Antarctic Lands')\r\n        .map((c) => {\r\n          return { ...c, subregion: 'Antarctic' }\r\n        })\r\n\r\n      // Remove defective country objects\r\n      const otherCountries = action.data.filter(\r\n        (item) =>\r\n          item.name.common !== 'Antarctica' &&\r\n          item.name.common !== 'Bouvet Island' &&\r\n          item.name.common !== 'Heard Island and McDonald Islands' &&\r\n          item.name.common !== 'Macau' &&\r\n          item.name.common !== 'United States Minor Outlying Islands' &&\r\n          item.name.common !== 'South Georgia' &&\r\n          item.name.common !== 'French Southern and Antarctic Lands'\r\n      )\r\n\r\n      // Insert replacement objects with keys in place\r\n      const nCountries = [\r\n        ...otherCountries,\r\n        southGeorgia[0],\r\n        heardIsland[0],\r\n        macau[0],\r\n        usMinor[0],\r\n        antarctica[0],\r\n        bouvetIsland[0],\r\n        frenchSouthern[0],\r\n      ]\r\n\r\n      const sortCountries = (a, b) => {\r\n        return a.name.common.localeCompare(b.name.common)\r\n      }\r\n\r\n      const initialCountries = nCountries.sort(sortCountries)\r\n\r\n      return {\r\n        initialCountries,\r\n        filter: {\r\n          input: '',\r\n          country: '',\r\n          region: 'All',\r\n          subregion: '',\r\n          reset: false,\r\n        },\r\n        filtered: initialCountries,\r\n        sortConfig: {\r\n          key: 'name',\r\n          direction: 'ascending',\r\n        },\r\n      }\r\n    case 'FILTER_COUNTRIES':\r\n      if (action.input === '') {\r\n        return {\r\n          initialCountries,\r\n          filter: {\r\n            input: '',\r\n            country: '',\r\n            region: 'All',\r\n            subregion: '',\r\n            reset: false,\r\n          },\r\n          filtered: initialCountries,\r\n          sortConfig: {\r\n            key: 'name',\r\n            direction: 'ascending',\r\n          },\r\n        }\r\n      } else if (action.input) {\r\n        const toSearch = {\r\n          ...state,\r\n          filter: {\r\n            ...state.filter,\r\n            input: action.input.toLowerCase(),\r\n          },\r\n        }\r\n\r\n        const filtered = toSearch.initialCountries.filter((c) =>\r\n          c.name.common.toLowerCase().startsWith(toSearch.filter.input)\r\n        )\r\n\r\n        return { ...toSearch, filtered: filtered }\r\n      } else if (action.country) {\r\n        const toSearch = {\r\n          ...state,\r\n          filter: {\r\n            ...state.filter,\r\n            country: action.country.name.common.toLowerCase(),\r\n            region: action.country.region,\r\n            subregion: action.country.subregion,\r\n          },\r\n        }\r\n        const filtered = toSearch.initialCountries.filter(\r\n          (c) =>\r\n            c.name.common.toLowerCase() ===\r\n            toSearch.filter.country.toLowerCase()\r\n        )\r\n        return { ...toSearch, filtered: filtered }\r\n      } else if (action.region) {\r\n        const selectRegion = {\r\n          ...state,\r\n          filter: { ...state.filter, region: action.region.toLowerCase() },\r\n        }\r\n        const regionFiltered =\r\n          selectRegion.filter.region === 'all'\r\n            ? selectRegion.initialCountries\r\n            : selectRegion.initialCountries.filter(\r\n                (c) => c.region.toLowerCase() === selectRegion.filter.region\r\n              )\r\n\r\n        return {\r\n          ...selectRegion,\r\n          filtered: regionFiltered,\r\n          filter: {\r\n            ...selectRegion.filter,\r\n            input: '',\r\n            country: '',\r\n            region: action.region.toLowerCase(),\r\n            subregion: '',\r\n          },\r\n        }\r\n      } else if (action.subregion) {\r\n        const selectSubRegion = {\r\n          ...state,\r\n          filter: {\r\n            ...state.filter,\r\n            subregion: action.subregion.toLowerCase(),\r\n          },\r\n        }\r\n        const subregionFiltered = selectSubRegion.initialCountries.filter(\r\n          (s) => s.subregion?.toLowerCase() === selectSubRegion.filter.subregion\r\n        )\r\n   //     console.log('subregionFiltered', subregionFiltered)\r\n        const newState = { ...selectSubRegion, filtered: subregionFiltered }\r\n        return newState\r\n      } else {\r\n        return state\r\n      }\r\n    case 'RESET_FILTER':\r\n      return {\r\n        ...state,\r\n        filter: {\r\n          input: '',\r\n          country: '',\r\n          region: 'All',\r\n          subregion: '',\r\n          reset: true,\r\n        },\r\n      }\r\n    case 'SORT_COUNTRIES':\r\n      const direction =\r\n        state.sortConfig.direction === 'ascending' ? 'descending' : 'ascending'\r\n\r\n      let sortableItems = state.filtered\r\n\r\n      if (action.key === 'area' || action.key === 'population') {\r\n        sortableItems.sort((a, b) =>\r\n          direction === 'ascending'\r\n            ? a[action.key] - b[action.key]\r\n            : b[action.key] - a[action.key]\r\n        )\r\n      } else if (action.key === 'name') {\r\n        sortableItems.sort((a, b) =>\r\n          direction === 'ascending'\r\n            ? a[action.key].common.localeCompare(b[action.key].common)\r\n            : b[action.key].common.localeCompare(a[action.key].common)\r\n        )\r\n      } else if (action.key === 'capital') {\r\n        sortableItems.sort((a, b) =>\r\n          direction === 'ascending'\r\n            ? a[action.key][0].localeCompare(b[action.key][0])\r\n            : b[action.key][0].localeCompare(a[action.key][0])\r\n        )\r\n      } else {\r\n        sortableItems.sort((a, b) =>\r\n          a[action.key] && direction === 'ascending'\r\n            ? a[action.key].localeCompare(b[action.key])\r\n            : b[action.key].localeCompare(a[action.key])\r\n        )\r\n      }\r\n      const sortedState = {\r\n        ...state,\r\n        filtered: sortableItems,\r\n        sortConfig: { key: action.key, direction: direction },\r\n      }\r\n      return sortedState\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* ------------ Countries Reducer Actions ------------- */\r\n\r\nexport const initializeCountries = () => {\r\n  return async (dispatch) => {\r\n    const countries = await countryService.getAll()\r\n    dispatch({\r\n      type: 'INIT_COUNTRIES',\r\n      data: countries,\r\n    })\r\n  }\r\n}\r\n\r\nexport const resetFilter = (reset) => {\r\n  return {\r\n    type: 'RESET_FILTER',\r\n    reset: reset,\r\n  }\r\n}\r\n\r\nexport const searchCountriesByName = (input) => {\r\n  return {\r\n    type: 'FILTER_COUNTRIES',\r\n    input,\r\n  }\r\n}\r\n\r\nexport const searchCountriesByCapital = (inputCap) => {\r\n  return {\r\n    type: 'FILTER_COUNTRIES',\r\n    inputCap,\r\n  }\r\n}\r\n\r\nexport const filterCountries = (country) => {\r\n  return {\r\n    type: 'FILTER_COUNTRIES',\r\n    country,\r\n  }\r\n}\r\n\r\nexport const filterCountriesByRegion = (region) => {\r\n  return {\r\n    type: 'FILTER_COUNTRIES',\r\n    region,\r\n  }\r\n}\r\n\r\nexport const filterCountriesBySubRegion = (subregion) => {\r\n  return {\r\n    type: 'FILTER_COUNTRIES',\r\n    subregion,\r\n  }\r\n}\r\n\r\nexport const sortCountries = (key) => {\r\n  return {\r\n    type: 'SORT_COUNTRIES',\r\n    key,\r\n  }\r\n}\r\n\r\n/* -------------Unit Reducer ------------------ */\r\nexport const unitReducer = (state = { unit: 'metric' }, action) => {\r\n  switch (action.type) {\r\n    case 'UNIT_TOGGLE':\r\n      return { ...state, unit: action.unit }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const toggleUnit = (unit) => {\r\n  return {\r\n    type: 'UNIT_TOGGLE',\r\n    unit: unit,\r\n  }\r\n}\r\n\r\n/* ------------- Menu Reducer ------------------ */\r\nexport const menuReducer = (state = { show: false }, action) => {\r\n  switch (action.type) {\r\n    case 'MENU_TOGGLE':\r\n      const show = state.show === false ? true : false\r\n      return { ...state, show: show }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const toggleMenu = (show) => {\r\n  return {\r\n    type: 'MENU_TOGGLE',\r\n    show: show,\r\n  }\r\n}\r\n\r\nexport default countryReducer\r\n"],"sourceRoot":""}